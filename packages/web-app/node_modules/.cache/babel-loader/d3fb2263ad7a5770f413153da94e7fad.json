{"ast":null,"code":"var _jsxFileName = \"C:\\\\Training\\\\Apithon\\\\openbanking-ui-master\\\\packages\\\\web-app\\\\src\\\\Redirecting.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getAccessToken } from '@openbanking/ui-data/lib/services/auth-service';\nimport Loading from '@openbanking/ui-common/lib/Loading';\nimport { parse } from 'query-string';\nimport { Redirect } from 'react-router';\n\nfunction Redirecting(props) {\n  // dont allow user to access this page directly\n  if (!props.journeyType) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 16\n      }\n    });\n  } else {\n    const {\n      code\n    } = parse(window.location.hash.substring(1));\n    props.getAccessToken(code, props.journeyType);\n  }\n\n  return /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }\n  });\n}\n\nconst mapStateToProps = state => ({\n  journeyType: sessionStorage.getItem('type')\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getAccessToken: (code, type) => getAccessToken(dispatch, code, type)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Redirecting);","map":{"version":3,"sources":["C:/Training/Apithon/openbanking-ui-master/packages/web-app/src/Redirecting.js"],"names":["React","connect","getAccessToken","Loading","parse","Redirect","Redirecting","props","journeyType","code","window","location","hash","substring","mapStateToProps","state","sessionStorage","getItem","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,gDAA/B;AACA,OAAOC,OAAP,MAAoB,oCAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB;AACA,MAAI,CAACA,KAAK,CAACC,WAAX,EAAwB;AACpB,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAEO;AACH,UAAM;AAAEC,MAAAA;AAAF,QAAWL,KAAK,CAACM,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,SAArB,CAA+B,CAA/B,CAAD,CAAtB;AACAN,IAAAA,KAAK,CAACL,cAAN,CAAqBO,IAArB,EAA2BF,KAAK,CAACC,WAAjC;AACH;;AACD,sBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH;;AAED,MAAMM,eAAe,GAAIC,KAAD,KAAY;AAChCP,EAAAA,WAAW,EAAEQ,cAAc,CAACC,OAAf,CAAuB,MAAvB;AADmB,CAAZ,CAAxB;;AAIA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACtCjB,EAAAA,cAAc,EAAE,CAACO,IAAD,EAAOW,IAAP,KAAgBlB,cAAc,CAACiB,QAAD,EAAWV,IAAX,EAAiBW,IAAjB;AADR,CAAf,CAA3B;;AAIA,eAAenB,OAAO,CAACa,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CZ,WAA7C,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { getAccessToken } from '@openbanking/ui-data/lib/services/auth-service'\nimport Loading from '@openbanking/ui-common/lib/Loading'\nimport { parse } from 'query-string'\nimport { Redirect } from 'react-router'\n\nfunction Redirecting(props) {\n    // dont allow user to access this page directly\n    if (!props.journeyType) {\n        return <Redirect to=\"/\" />\n    } else {\n        const { code } = parse(window.location.hash.substring(1))\n        props.getAccessToken(code, props.journeyType)\n    }\n    return <Loading />\n}\n\nconst mapStateToProps = (state) => ({\n    journeyType: sessionStorage.getItem('type'),\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    getAccessToken: (code, type) => getAccessToken(dispatch, code, type),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Redirecting)\n"]},"metadata":{},"sourceType":"module"}