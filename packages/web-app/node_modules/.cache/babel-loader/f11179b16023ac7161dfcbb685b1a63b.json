{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAccountList = getAccountList;\nexports.getAccountById = getAccountById;\nexports.getAccountBalances = getAccountBalances;\nexports.getAccountTransactions = getAccountTransactions;\nexports.getAccountDirectDebits = getAccountDirectDebits;\nexports.getAccountStandingOrders = getAccountStandingOrders;\nexports.getAccountProducts = getAccountProducts;\n\nvar _request = _interopRequireDefault(require(\"./request\"));\n\nvar _app = require(\"../actions/app\");\n\nvar _account = require(\"../actions/account\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n} //accounts api's\n\n\nfunction getAccountList(dispatch) {\n  (0, _request[\"default\"])(dispatch, '/aisp/accounts', 'GET', null, {}, function (response) {\n    //callback placeholder where one or multiple actions can be dispatched\n    dispatch((0, _app.setData)(response));\n\n    if (response.Data.Account.length > 0) {\n      dispatch((0, _account.setAccountId)(response.Data.Account[0].AccountId));\n    }\n  });\n} // get account by id\n\n\nfunction getAccountById(dispatch, accountId) {\n  (0, _request[\"default\"])(dispatch, \"/aisp/accounts/\".concat(accountId), 'GET', null, {}, function (response) {\n    dispatch((0, _app.setData)(response));\n  });\n}\n\nfunction getAccountBalances(dispatch, accountId) {\n  (0, _request[\"default\"])(dispatch, \"/aisp/accounts/\".concat(accountId, \"/balances\"), 'GET', null, {}, function (response) {\n    dispatch((0, _app.setData)(response));\n  });\n}\n\nfunction getAccountTransactions(dispatch, accountId) {\n  (0, _request[\"default\"])(dispatch, \"/aisp/accounts/\".concat(accountId, \"/transactions\"), 'GET', null, {}, function (response) {\n    dispatch((0, _app.setData)(response));\n  });\n}\n\nfunction getAccountDirectDebits(dispatch, accountId) {\n  (0, _request[\"default\"])(dispatch, \"/aisp/accounts/\".concat(accountId, \"/direct-debits\"), 'GET', null, {}, function (response) {\n    dispatch((0, _app.setData)(response));\n  });\n}\n\nfunction getAccountStandingOrders(dispatch, accountId) {\n  (0, _request[\"default\"])(dispatch, \"/aisp/accounts/\".concat(accountId, \"/standing-orders\"), 'GET', null, {}, function (response) {\n    dispatch((0, _app.setData)(response));\n  });\n}\n\nfunction getAccountProducts(dispatch, params) {\n  (0, _request[\"default\"])(dispatch, '/aisp/products', 'GET', params, {}, function (response) {\n    dispatch((0, _app.setData)(response));\n  });\n}","map":{"version":3,"sources":["C:/Training/Apithon/openbanking-ui-master/packages/ui-data/lib/services/account-service.js"],"names":["Object","defineProperty","exports","value","getAccountList","getAccountById","getAccountBalances","getAccountTransactions","getAccountDirectDebits","getAccountStandingOrders","getAccountProducts","_request","_interopRequireDefault","require","_app","_account","obj","__esModule","dispatch","response","setData","Data","Account","length","setAccountId","AccountId","accountId","concat","params"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAccountList = getAccountList;\nexports.getAccountById = getAccountById;\nexports.getAccountBalances = getAccountBalances;\nexports.getAccountTransactions = getAccountTransactions;\nexports.getAccountDirectDebits = getAccountDirectDebits;\nexports.getAccountStandingOrders = getAccountStandingOrders;\nexports.getAccountProducts = getAccountProducts;\n\nvar _request = _interopRequireDefault(require(\"./request\"));\n\nvar _app = require(\"../actions/app\");\n\nvar _account = require(\"../actions/account\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n//accounts api's\nfunction getAccountList(dispatch) {\n  (0, _request[\"default\"])(dispatch, '/aisp/accounts', 'GET', null, {}, function (response) {\n    //callback placeholder where one or multiple actions can be dispatched\n    dispatch((0, _app.setData)(response));\n\n    if (response.Data.Account.length > 0) {\n      dispatch((0, _account.setAccountId)(response.Data.Account[0].AccountId));\n    }\n  });\n} // get account by id\n\n\nfunction getAccountById(dispatch, accountId) {\n  (0, _request[\"default\"])(dispatch, \"/aisp/accounts/\".concat(accountId), 'GET', null, {}, function (response) {\n    dispatch((0, _app.setData)(response));\n  });\n}\n\nfunction getAccountBalances(dispatch, accountId) {\n  (0, _request[\"default\"])(dispatch, \"/aisp/accounts/\".concat(accountId, \"/balances\"), 'GET', null, {}, function (response) {\n    dispatch((0, _app.setData)(response));\n  });\n}\n\nfunction getAccountTransactions(dispatch, accountId) {\n  (0, _request[\"default\"])(dispatch, \"/aisp/accounts/\".concat(accountId, \"/transactions\"), 'GET', null, {}, function (response) {\n    dispatch((0, _app.setData)(response));\n  });\n}\n\nfunction getAccountDirectDebits(dispatch, accountId) {\n  (0, _request[\"default\"])(dispatch, \"/aisp/accounts/\".concat(accountId, \"/direct-debits\"), 'GET', null, {}, function (response) {\n    dispatch((0, _app.setData)(response));\n  });\n}\n\nfunction getAccountStandingOrders(dispatch, accountId) {\n  (0, _request[\"default\"])(dispatch, \"/aisp/accounts/\".concat(accountId, \"/standing-orders\"), 'GET', null, {}, function (response) {\n    dispatch((0, _app.setData)(response));\n  });\n}\n\nfunction getAccountProducts(dispatch, params) {\n  (0, _request[\"default\"])(dispatch, '/aisp/products', 'GET', params, {}, function (response) {\n    dispatch((0, _app.setData)(response));\n  });\n}"]},"metadata":{},"sourceType":"script"}